// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedisRateLimiting.Sample.AspNetCore.Database;

#nullable disable

namespace RedisRateLimiting.Sample.AspNetCore.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    [Migration("20221113165632_DatabaseStructure")]
    partial class DatabaseStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("RedisRateLimiting.Sample.AspNetCore.Database.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identifier")
                        .HasColumnType("TEXT");

                    b.Property<long>("RateLimitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RateLimitId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Identifier = "client1",
                            RateLimitId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Identifier = "client2",
                            RateLimitId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Identifier = "client2",
                            RateLimitId = 3L
                        });
                });

            modelBuilder.Entity("RedisRateLimiting.Sample.AspNetCore.Database.RateLimit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermitLimit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QueueLimit")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Window")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RateLimits");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PermitLimit = 1,
                            QueueLimit = 0,
                            Window = new TimeSpan(0, 0, 0, 1, 0)
                        },
                        new
                        {
                            Id = 2L,
                            PermitLimit = 2,
                            QueueLimit = 0,
                            Window = new TimeSpan(0, 0, 0, 1, 0)
                        },
                        new
                        {
                            Id = 3L,
                            PermitLimit = 10,
                            QueueLimit = 0,
                            Window = new TimeSpan(0, 0, 0, 1, 0)
                        });
                });

            modelBuilder.Entity("RedisRateLimiting.Sample.AspNetCore.Database.Client", b =>
                {
                    b.HasOne("RedisRateLimiting.Sample.AspNetCore.Database.RateLimit", "RateLimit")
                        .WithMany("Clients")
                        .HasForeignKey("RateLimitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RateLimit");
                });

            modelBuilder.Entity("RedisRateLimiting.Sample.AspNetCore.Database.RateLimit", b =>
                {
                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
